[project]
name = "iterdot"
version = "0.2.4"
authors = [{ name = "Sayandip Dutta", email = "sayandip199309@gmail.com" }]
description = "Fully typed Python iterator with method chaining"
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development",

    "License :: OSI Approved :: MIT License",

    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
keywords = ["iterator", "method chaining", "fluent interface"]
dependencies = []


[project.urls]
Homepage = "https://github.com/sayandipdutta/iterdot"
Repository = "https://github.com/sayandipdutta/iterdot.git"
GitHub = "https://github.com/sayandipdutta/iterdot.git"
Download = "https://github.com/sayandipdutta/iterdot/releases/latest"
Issues = "https://github.com/sayandipdutta/iterdot/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    { include-group = "lint" },
    { include-group = "typing" },
    { include-group = "test" },
    { include-group = "ci" },
]
lint = ["ruff>=0.7.0"]
typing = ["basedpyright>=1.19.0"]
test = ["pytest>=8.3.3"]
ci = ["pre-commit>=4.0.1"]

[tool.uv]
upgrade = true

[tool.ruff]
line-length = 90
src = ["src", "test"]

[tool.ruff.format]
preview = true

[tool.ruff.lint]
preview = true
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "FA",   # future annotations
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "ANN",  # type annotations
    "FBT",  # boolean trap
    "C4",   # flake8-comprehension
    "PT",   # flake8-pytest-style
    "TCH",  # flake8-type-checking
    "RUF",  # ruff-specific rules
    "DOC",  # pydoclint
    "FURB", # refurb
    "PERF", # perflint
    # "PL",   # pylint
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["ANN201", "ANN001"]
"src/**.py" = ["E501"]

[tool.basedpyright]
pythonVersion = "3.13"
venvPath = "."
venv = ".venv"
enableExperimentalFeatures = true
# rules
reportUnknownVariableType = "warning"
reportMatchNotExhaustive = "error"
reportPrivateUsage = "warning"
reportOptionalMemberAccess = "warning"
