[project]
name = "iterdot"
version = "0.2.2"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = []

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    { include-group = "lint" },
    { include-group = "typing" },
    { include-group = "test" },
    { include-group = "ci" },
]
lint = ["ruff>=0.7.0"]
typing = ["basedpyright>=1.19.0"]
test = ["pytest>=8.3.3"]
ci = ["pre-commit>=4.0.1"]

[tool.uv]
upgrade = true

[tool.ruff]
line-length = 90
src = ["src", "test"]

[tool.ruff.format]
preview = true

[tool.ruff.lint]
preview = true
select = [
    "E",   # pycodestyle
    "F",   # Pyflakes
    "FA",  # future annotations
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
    "ANN", # type annotations
    "FBT", # boolean trap
    "C4",  # flake8-comprehension
    "PT",  # flake8-pytest-style
    "TCH", # flake8-type-checking
    # pylint
    # "PL",
    "RUF",
    "DOC",
    "FURB",
    "PERF",
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["ANN201", "ANN001"]
"src/**.py" = ["E501"]

[tool.basedpyright]
pythonVersion = "3.13"
venvPath = "."
venv = ".venv"
enableExperimentalFeatures = true
# rules
reportUnknownVariableType = "warning"
reportMatchNotExhaustive = "error"
reportPrivateUsage = "warning"
reportOptionalMemberAccess = "warning"
